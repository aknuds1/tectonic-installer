module "ignition_masters" {
  source = "./ignition"

  kube_dns_service_ip = "${module.bootkube.kube_dns_service_ip}"
  node_label = "node-role.kubernetes.io/master"
  node_taints_param = "--register-with-taints=node-role.kubernetes.io/master=:NoSchedule"
  bootkube_service = "${module.bootkube.systemd_service}"
  tectonic_service = "${module.tectonic.systemd_service}"
}

resource "digitalocean_droplet" "master_node" {
  count = 1
  name = "{{ cluster_name }}-master-${count.index}"
  image = "{{ droplet_image }}"
  region = "{{ region }}"
  size = "{{ master_size }}"
  ssh_keys = {{ ssh_keys }}
  tags = {{ extra_tags }}
  user_data = "${module.ignition_masters.ignition}"
}

resource "digitalocean_loadbalancer" "console" {
  name = "{{ cluster_name }}-con"
  region = "{{ region }}"
  droplet_ids = ["${digitalocean_droplet.master_node.*.id}"]

  forwarding_rule {
    entry_port = 80
    entry_protocol = "tcp"
    target_port = 32001
    target_protocol = "tcp"
  }

  forwarding_rule {
    entry_port = 443
    entry_protocol = "tcp"
    target_port = 32000
    target_protocol = "tcp"
  }

  healthcheck {
    port = 32002
    protocol = "http"
    path = "/healthz"
    check_interval_seconds = 5
    response_timeout_seconds = 3
    healthy_threshold = 2
    unhealthy_threshold = 2
  }
}

resource "digitalocean_domain" "cluster" {
  name = "{{ cluster_domain }}"
  ip_address = "${digitalocean_droplet.master_node.*.ipv4_address[0]}"
}

resource "digitalocean_domain" "console" {
  name = "console.{{ cluster_domain }}"
  ip_address = "${digitalocean_loadbalancer.console.ip}"
}

resource "digitalocean_record" "master" {
  count = 1
  domain = "${digitalocean_domain.cluster.id}"
  type = "A"
  name = "{{ cluster_name }}-master-${count.index}"
  value = "${element(digitalocean_droplet.master_node.*.ipv4_address, count.index)}"
}
